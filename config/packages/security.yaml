security:
    encoders:
        App\Entity\UserApp:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\UserApp
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
    
        api:
            pattern: ^/api
            anonymous: false
            stateless: true
           
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator

        login:
            pattern: ^/login_check
            stateless: true
            provider: app_user_provider
            anonymous: true
            # guard:
            #     authenticators:
            #         - App\Security\LoginFormAuthenticator
            json_login:
                check_path:    /login_check
                username_path: security.credentials.login
                password_path: security.credentials.password

        # main:
        #     pattern: /login
        #     anonymous: ~
        #     guard:
        #         authenticators:
        #             - App\Security\LoginFormAuthenticator
        #     logout:
        #         path: app_logout
                # where to redirect after logout
                # target: app_any_route
            # provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/api, roles: ROLE_USER }
